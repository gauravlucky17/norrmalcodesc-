A word is considered valid if:

It contains a minimum of 3 characters.
It contains only digits (0-9), and English letters (uppercase and lowercase).
It includes at least one vowel.
It includes at least one consonant.
You are given a string word.

Return true if word is valid, otherwise, return false.

Notes:

'a', 'e', 'i', 'o', 'u', and their uppercases are vowels.
A consonant is an English letter that is not a vowel.
 

Example 1:

Input: word = "234Adas"

Output: true

Explanation:

This word satisfies the conditions.

Example 2:

Input: word = "b3"

Output: false

Explanation:

The length of this word is fewer than 3, and does not have a vowel.

Example 3:

Input: word = "a3$e"

Output: false

Explanation:

This word contains a '$' character and does not have a consonant.

 

Constraints:

1 <= word.length <= 20
word consists of English uppercase and lowercase letters, digits, '@', '#', and '$'.



/// for leetcode


public class Solution {
    public bool IsValid(string word) {
        return word.Length >= 3 &&
               word.All(c => char.IsLetterOrDigit(c)) &&
               word.Any(IsVowel) && 
               word.Any(IsConsonant);
    }

    private static bool IsVowel(char c) {
        const string kVowels = "aeiouAEIOU";
        return kVowels.IndexOf(c) != -1;
    }

    private static bool IsConsonant(char c) {
        return char.IsLetter(c) && !IsVowel(c);
    }
}


/// with main function 

using System;
using System.Linq;

public class Solution
{
    public bool IsValid(string word)
    {
        return word.Length >= 3 &&
               word.All(c => char.IsLetterOrDigit(c)) &&
               word.Any(IsVowel) &&
               word.Any(IsConsonant);
    }

    private static bool IsVowel(char c)
    {
        const string kVowels = "aeiouAEIOU";
        return kVowels.IndexOf(c) != -1;
    }

    private static bool IsConsonant(char c)
    {
        return char.IsLetter(c) && !IsVowel(c);
    }
}

public class Program
{
    public static void Main()
    {
        Solution sol = new Solution();

        string[] testWords = { "abc", "a1e", "ab1", "123", "a", "Ae2", "bc3", "eIo", "hello123" };

        foreach (var word in testWords)
        {
            bool result = sol.IsValid(word);
            Console.WriteLine($"IsValid(\"{word}\") => {result}");
        }
    }
}
