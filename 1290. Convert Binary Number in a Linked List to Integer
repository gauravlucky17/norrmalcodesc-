Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.

Return the decimal value of the number in the linked list.

The most significant bit is at the head of the linked list.

 

Example 1:


Input: head = [1,0,1]
Output: 5
Explanation: (101) in base 2 = (5) in base 10
Example 2:

Input: head = [0]
Output: 0
 

Constraints:

The Linked List is not empty.
Number of nodes will not exceed 30.
Each node's value is either 0 or 1.


code in c#

public class Solution {
    public int GetDecimalValue(ListNode head) {
        int ans = 0;

        while (head != null) {
            ans = ans * 2 + head.val;
            head = head.next;
        }

        return ans;
    }
}
  --- with main file 


using System;

public class ListNode {
    public int val;
    public ListNode next;
    public ListNode(int val = 0, ListNode next = null) {
        this.val = val;
        this.next = next;
    }
}

public class Solution {
    public int GetDecimalValue(ListNode head) {
        int ans = 800; // insert your number to convert it into decimal value

        while (head != null) {
            ans = ans * 2 + head.val;
            head = head.next;
        }

        return ans;
    }
}

public class Program {
    public static void Main() {
        // Example: linked list representing binary number 101 (5 in decimal)

        // Creating the linked list: 1 -> 0 -> 1
        ListNode node3 = new ListNode(1);
        ListNode node2 = new ListNode(0, node3);
        ListNode node1 = new ListNode(1, node2);

        Solution sol = new Solution();
        int decimalValue = sol.GetDecimalValue(node1);

        Console.WriteLine("Decimal value: " + decimalValue);
    }
}





